// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_commerce.Infrastructure.Entites;

#nullable disable

namespace e_commerce.Infrastructure.Migrations
{
    [DbContext(typeof(ECommerceDBContext))]
    [Migration("20250412175443_addcolumnsproduct")]
    partial class addcolumnsproduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductWishlist", b =>
                {
                    b.Property<int>("WishlistId")
                        .HasColumnType("int")
                        .HasColumnName("Wishlist_ID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.HasKey("WishlistId", "ProductId")
                        .HasName("PK__Product___7FD1083A4BA20C42");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_Wishlist", (string)null);
                });

            modelBuilder.Entity("e_commerce.Domain.Entites.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID");

                    b.Property<string>("DeptNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Address__3214EC27EC8F225B");

                    b.HasIndex("CustomerId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID");

                    b.Property<int>("TotalItemsNumber")
                        .HasColumnType("int")
                        .HasColumnName("Total_Items_Number");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Total_Price");

                    b.HasKey("Id")
                        .HasName("PK__Cart__3214EC27F2436962");

                    b.HasIndex(new[] { "CustomerId" }, "UQ__Cart__8CB286B8700ED883")
                        .IsUnique();

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.CartProduct", b =>
                {
                    b.Property<int>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("Cart_ID");

                    b.Property<int>("ProductCode")
                        .HasColumnType("int")
                        .HasColumnName("product_code");

                    b.Property<decimal>("ItemTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Item_Total");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Unit_Price");

                    b.HasKey("CartId", "ProductCode")
                        .HasName("PK__Cart_Pro__9C4AF075F8E58532");

                    b.HasIndex("ProductCode");

                    b.ToTable("Cart_Product");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC2794A91D88");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC27B75DE14A");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Order_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int")
                        .HasColumnName("Payment_Method");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("int")
                        .HasColumnName("Shipping_Address_ID");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Total_Price");

                    b.HasKey("Id")
                        .HasName("PK__Order__3214EC27C4A690F4");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShippingAddressId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_ID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<decimal>("ItemTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Item_Total");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Unit_Price");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("PK__Order_Pr__48672C2257690B3E");

                    b.HasIndex("ProductId");

                    b.ToTable("Order_Product");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESC");

                    b.Property<decimal?>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(0m);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("Seller_ID");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Sub_Category_ID");

                    b.HasKey("Id")
                        .HasName("PK__Product__3214EC278B3FF41B");

                    b.HasIndex("SellerId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex(new[] { "Code" }, "UQ__Product__A25C5AA733C60312")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Display_Order");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Image_URL");

                    b.Property<bool?>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Is_Primary");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.HasKey("Id")
                        .HasName("PK__Product___3214EC27769A4C12");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_Image");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Return", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_ID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReturnDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Return_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Returns__3214EC274E77FA1B");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Returns");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.ReturnImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Display_Order");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Image_URL");

                    b.Property<bool?>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Is_Primary");

                    b.Property<int>("ReturnId")
                        .HasColumnType("int")
                        .HasColumnName("Return_ID");

                    b.HasKey("Id")
                        .HasName("PK__Return_I__3214EC27A7EF9997");

                    b.HasIndex("ReturnId");

                    b.ToTable("Return_Image");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Review_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Review__3214EC2760B66623");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__Seller__3214EC272DFE5864");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Seller");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Sub_Cate__3214EC27EDCAACCF");

                    b.HasIndex("CategoryId");

                    b.ToTable("Sub_Category");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Wishlist__3214EC27DFF4E54F");

                    b.HasIndex("CustomerId");

                    b.ToTable("Wishlist");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("e_commerce.Domain.Entites.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("e_commerce.Domain.Entites.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_commerce.Domain.Entites.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("e_commerce.Domain.Entites.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductWishlist", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Product_W__Produ__6477ECF3");

                    b.HasOne("e_commerce.Infrastructure.Entites.Wishlist", null)
                        .WithMany()
                        .HasForeignKey("WishlistId")
                        .IsRequired()
                        .HasConstraintName("FK__Product_W__Wishl__6383C8BA");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Address", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Address__Custome__4CA06362");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Cart", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Customer", "Customer")
                        .WithOne("Cart")
                        .HasForeignKey("e_commerce.Infrastructure.Entites.Cart", "CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__Customer_I__59FA5E80");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.CartProduct", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Cart", "Cart")
                        .WithMany("CartProducts")
                        .HasForeignKey("CartId")
                        .IsRequired()
                        .HasConstraintName("FK__Cart_Prod__Cart___5CD6CB2B");

                    b.HasOne("e_commerce.Infrastructure.Entites.Product", "ProductCodeNavigation")
                        .WithMany("CartProducts")
                        .HasForeignKey("ProductCode")
                        .IsRequired()
                        .HasConstraintName("FK__Cart_Prod__produ__5DCAEF64");

                    b.Navigation("Cart");

                    b.Navigation("ProductCodeNavigation");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Customer", b =>
                {
                    b.HasOne("e_commerce.Domain.Entites.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Order", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__Customer___5070F446");

                    b.HasOne("e_commerce.Infrastructure.Entites.Address", "ShippingAddress")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingAddressId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__Shipping___5165187F");

                    b.Navigation("Customer");

                    b.Navigation("ShippingAddress");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.OrderProduct", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Pro__Order__5441852A");

                    b.HasOne("e_commerce.Infrastructure.Entites.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Pro__Produ__5535A963");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Product", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Seller", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__Seller___4222D4EF");

                    b.HasOne("e_commerce.Infrastructure.Entites.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__Sub_Cat__412EB0B6");

                    b.Navigation("Seller");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.ProductImage", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Product_I__Produ__46E78A0C");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Return", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Order", "Order")
                        .WithMany("Returns")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Returns__Order_I__6E01572D");

                    b.HasOne("e_commerce.Infrastructure.Entites.Product", "Product")
                        .WithMany("Returns")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Returns__Product__6EF57B66");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.ReturnImage", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Return", "Return")
                        .WithMany("ReturnImages")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Return_Im__Retur__73BA3083");

                    b.Navigation("Return");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Review", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__Customer__693CA210");

                    b.HasOne("e_commerce.Infrastructure.Entites.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__Product___6A30C649");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Seller", b =>
                {
                    b.HasOne("e_commerce.Domain.Entites.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.SubCategory", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Sub_Categ__Categ__398D8EEE");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Wishlist", b =>
                {
                    b.HasOne("e_commerce.Infrastructure.Entites.Customer", "Customer")
                        .WithMany("Wishlists")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Wishlist__Custom__60A75C0F");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Cart", b =>
                {
                    b.Navigation("CartProducts");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Order", b =>
                {
                    b.Navigation("OrderProducts");

                    b.Navigation("Returns");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Product", b =>
                {
                    b.Navigation("CartProducts");

                    b.Navigation("OrderProducts");

                    b.Navigation("ProductImages");

                    b.Navigation("Returns");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Return", b =>
                {
                    b.Navigation("ReturnImages");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.Seller", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("e_commerce.Infrastructure.Entites.SubCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
