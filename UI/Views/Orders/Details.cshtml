@using e_commerce.Domain.Enums
@model e_commerce.Infrastructure.Entites.Order
@{
    ViewData["Title"] = "Order Details";
    Layout = "_AdminLayout";
}

@if (Model == null)
{
    <div class="alert alert-danger my-4">
        <h4>Error: Order not found</h4>
        <p>The requested order could not be found in the system.</p>
        <a asp-action="Index" class="btn btn-primary">Back to Orders</a>
    </div>
    return;
}

<h1 class="text-center my-4 text-primary fw-bold">Order Details</h1>

<div class="container border border-5">
    <div class="row mb-4">
        <div class="col-md-6">
            <h3>Order Information</h3>
            <p><strong>Order ID:</strong> @Model.Id</p>
            <p><strong>Customer Email:</strong> @Model.Customer?.ApplicationUser?.FirstName</p>
            <p><strong>Order Date:</strong> @Model.OrderDate?.ToString("g")</p>
            <p><strong>Total Amount:</strong> @Model.TotalPrice.ToString("C")</p>
            <p>
                <strong>Status:</strong>
                <span class="badge @GetOrderStatusClass((int)Model.Status)">
                    @if (Enum.IsDefined(typeof(e_commerce.Domain.Enums.orderstateEnum), Model.Status))
                    {
                        @Enum.GetName(typeof(e_commerce.Domain.Enums.orderstateEnum), Model.Status)
                    }
                    else
                    {
                        @:Unknown Status
                    }
                </span>
            </p>
            @* <form asp-action="UpdateStatus" method="post" class="mt-3">  *@
            @*      <input type="hidden" name="id" value="@Model.Id" />  *@
            @*      <div class="form-group">  *@
            @*          <label for="Status" class="fw-bold">Change Order Status:</label>  *@
            @*          <select name="status" class="form-control w-50">  *@
            @*              @foreach (var enumValue in Enum.GetValues(typeof(orderstateEnum)).Cast<orderstateEnum>())  *@
            @*              {  *@
            @*                  <option value="@((int)enumValue)" selected="@(Model.Status == enumValue)">  *@
            @*                      @enumValue.ToString()  *@
            @*                  </option>  *@
            @*              }  *@
            @*          </select>  *@
            @*      </div>  *@
            @*      <button type="submit" class="btn btn-primary mt-2">Update</button>  *@
            @*  </form> *@
        </div>
        <div class="col-md-6">
            <h3>Customer Information</h3>
            @if (Model.Customer?.ApplicationUser != null)
            {
                <p><strong>Name:</strong> @Model.Customer?.ApplicationUser?.FirstName</p>
                <p><strong>Email:</strong> @Model.Customer?.ApplicationUser?.Email</p>
            }
            else
            {
                <p class="text-muted">Customer information not available</p>
            }
        </div>
    </div>

    <h3>Order Items</h3>
    @if (Model.OrderProducts == null || !Model.OrderProducts.Any())
    {
        <div class="alert alert-warning">No items found in this order</div>
    }
    else
    {
        <table class="table table-hover table-bordered text-center align-middle">
            <thead>
                <tr>
                    <th>Product Id</th>
                 
                    <th>Quantity</th>
                
                    <th>UnitPrice</th>
                    <th>ItemTotal</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderProducts)
                {
                    <tr>
                        <td>@item.ProductId</td>
                     
                    

                        <td>@item.Quantity</td>
                        <td>@item.UnitPrice.ToString("C")</td>
                        <td>@item.ItemTotal</td>
                    </tr>
                }
            </tbody>
           
        </table>
    }
</div>

<div class="text-center mb-4">
    <a href="@Url.Action("Index", "Orders")" class="btn btn-secondary">Back to Orders</a>
</div>

@functions {
    public string GetOrderStatusClass(int status)
    {
        return status switch
        {
            0 => "bg-warning text-dark",   // Pending
            1 => "bg-primary",             // Confirmed
            2 => "bg-info",                // Shipped
            3 => "bg-success",             // Delivered
            4 => "bg-danger",              // Cancelled
            5 => "bg-secondary",           // Returned
            _ => "bg-light text-dark"
        };
    }
}