@model IEnumerable<e_commerce.Infrastructure.Entites.Address>

@{
    ViewData["Title"] = "Index";
}

<div class="container">
    @if (@Model.Count() == 0)
    {
        <a asp-action="Create" class="btn btn-light mx-5">Create</a>
        <div class="alert alert-info" role="alert">
            <strong>Info!</strong> No addresses found. Please create a new address.
        </div>
    }
    else
    {
        <p>
            <a asp-action="Create" class="btn btn-light mx-5">Create</a>
        </p>

        @foreach (var item in Model)
        {
            <div class="address-card" id="address">
                <h3 class="tab__header">Shipping Address</h3>
                <div class="address-details">
                    <address>
                        <span class="address-label">City:</span> @Html.DisplayFor(modelItem => item.City) <br />
                        <span class="address-label">Street:</span> @Html.DisplayFor(modelItem => item.Street) <br />
                        <span class="address-label">Dept No:</span> @Html.DisplayFor(modelItem => item.DeptNo) <br />
                        <span class="address-label">Is Default:</span> @Html.DisplayFor(modelItem => item.IsDefault) <br />
                    </address>
                </div>
                <div class="address-actions">
                    <a asp-action="Edit" asp-route-id="@item.Id" asp-route-customerId="@item.CustomerId">
                        <i class="fas fa-edit" style="color: gray;"></i>
                    </a> |
                    <a data-address-id="@item.Id" class="btn-delete-address">
                        <i class="fi fi-rs-trash table__trash"></i>
                    </a>
                </div>
            </div>
        }
    }
</div>

<script>
    function validate() {
        arguments[0] = @Html.Raw(Json.Serialize(ViewBag.Error));
        if (arguments[0] == null) {
            return true;
        } else {
            alert(arguments[0]);
            return false;
        }
    }
</script>
